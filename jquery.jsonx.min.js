// [jquery-jsonx](http://neocotic.com/jquery-jsonx) 1.0.0
// (c) 2011 Alasdair Mercer
// Freely distributable under the MIT license.
// For all details and documentation:
// http://neocotic.com/jquery-jsonx
(function(a){function b(b){var c=b[0],d="",e=c.nodeType!==1||!a.isXMLDoc(c),f={};if(c.attributes.length>0){for(var g=0;g<c.attributes.length;g++){d=c.attributes[g].name;d=e&&a.propFix[d]||d;f[d]=b.attr(d)}}return f}var c={build:function(b){function d(b,c){var e=[],f={};if(a.isArray(b)){if(!b.length||a.type(b[0])!=="string"){a.error("JSONX.build: Syntax error")}f=a(document.createElement(b[0]));if(b.length>1){if(a.isPlainObject(b[1])){f.attr(b[1]);if(b.length>2)e=Array.prototype.slice.call(b,2)}else{e=Array.prototype.slice.call(b,1)}if(e.length)d(e,f)}}else if(a.type(b)==="string"){c.append(b)}return c}if(a.type(b)==="string")b=c.parse(b);if(!a.isArray(b))a.error("JSONX.build: Type error");return d(b,a("<x/>")).contents()},parse:function(c){function d(c){var e=[];c.each(function(){var c=a(this),f={},g=c.contents();Array.prototype.push.call(e,this.nodeName.toLowerCase());f=b(c);if(!a.isEmptyObject(f))Array.prototype.push.call(e,f);if(g.length){for(var h=0;h<g.length;h++){if(g[h].nodeType===3){Array.prototype.push.call(e,g[h].textContent)}else{Array.prototype.push.call(e,d(a(g[h])))}}}});return e}if(typeof c==="undefined")c=this;switch(a.type(c)){case"string":return JSON.parse(c);case"object":return d(a(c))}a.error("JSONX.parse: Type error")},stringify:function(b){if(typeof b==="undefined"){b=c.parse(this)}else if(a.type(b)==="object"&&b.jquery){b=c.parse(b)}else if(!a.isArray(b)){a.error("JSONX.stringify: Type error")}return JSON.stringify(b)}};a.fn.jsonx=function(a){if(c[a]){return c[a].apply(this,Array.prototype.slice.call(arguments,1))}return c.build.apply(this,arguments)}})(jQuery)